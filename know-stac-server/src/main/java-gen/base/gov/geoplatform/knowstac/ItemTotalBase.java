package gov.geoplatform.knowstac;

@com.runwaysdk.business.ClassSignature(hash = 1704218892)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to ItemTotal.java
 *
 * @author Autogenerated by RunwaySDK
 */
public abstract class ItemTotalBase extends com.runwaysdk.business.graph.VertexObject
{
  public final static String CLASS = "gov.geoplatform.knowstac.ItemTotal";
  public final static java.lang.String NUMBEROFITEMS = "numberOfItems";
  public final static java.lang.String OID = "oid";
  public final static java.lang.String SEQ = "seq";
  @SuppressWarnings("unused")
  private static final long serialVersionUID = 1704218892;
  
  public ItemTotalBase()
  {
    super();
  }
  
  public Integer getNumberOfItems()
  {
    return (Integer) this.getObjectValue(NUMBEROFITEMS);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeIntegerDAOIF getNumberOfItemsMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(gov.geoplatform.knowstac.ItemTotal.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeIntegerDAOIF)mdClassIF.definesAttribute(NUMBEROFITEMS);
  }
  
  public void setNumberOfItems(Integer value)
  {
    this.setValue(NUMBEROFITEMS, value);
  }
  
  public String getOid()
  {
    return (String) this.getObjectValue(OID);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeUUIDDAOIF getOidMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(gov.geoplatform.knowstac.ItemTotal.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeUUIDDAOIF)mdClassIF.definesAttribute(OID);
  }
  
  public Long getSeq()
  {
    return (Long) this.getObjectValue(SEQ);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeLongDAOIF getSeqMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(gov.geoplatform.knowstac.ItemTotal.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeLongDAOIF)mdClassIF.definesAttribute(SEQ);
  }
  
  public void setSeq(Long value)
  {
    this.setValue(SEQ, value);
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public com.runwaysdk.business.graph.EdgeObject addOrganizationHasTotalParent(net.geoprism.registry.graph.GraphOrganization graphOrganization)
  {
    return super.addParent(graphOrganization, "gov.geoplatform.knowstac.OrganizationHasTotal");
  }
  
  public void removeOrganizationHasTotalParent(net.geoprism.registry.graph.GraphOrganization graphOrganization)
  {
    super.removeParent(graphOrganization, "gov.geoplatform.knowstac.OrganizationHasTotal");
  }
  
  @SuppressWarnings("unchecked")
  public java.util.List<net.geoprism.registry.graph.GraphOrganization> getOrganizationHasTotalParentGraphOrganizations()
  {
    return super.getParents("gov.geoplatform.knowstac.OrganizationHasTotal", net.geoprism.registry.graph.GraphOrganization.class);
  }
  
  public static ItemTotal get(String oid)
  {
    return (ItemTotal) com.runwaysdk.business.graph.VertexObject.get(CLASS, oid);
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}
